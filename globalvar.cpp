#include "globalvar.h"


STTHREAD stThread[THREAD_MAX_SOURCE];




//==================================================================================================
//| 函数名称 | CreateSysThread
//|-------------------------------------------------------------------------------------------------
//| 函数功能 | CPubQthread构造函数
//|-------------------------------------------------------------------------------------------------
//| 输入参数 | uch_NUM系统可以创建的任务数
//|-------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|-------------------------------------------------------------------------------------------------
//| 函数设计 | cfh 2019.5.31
//==================================================================================================
INT8U CreateSysThread(void)
{
    INT8U i;

    for(i=0;i<THREAD_MAX_SOURCE;i++)
    {

       stThread[i].uch_Used = 0;
       stThread[i].uch_ID = 0;
       stThread[i].uch_Flag = 0;
       stThread[i].p_this =NULL;

    }

   return 1;

}


//==================================================================================================
//| 函数名称 | GetFreethreadID
//|-------------------------------------------------------------------------------------------------
//| 函数功能 |获取可以创建的任务序号
//|-------------------------------------------------------------------------------------------------
//| 输入参数 | uch_NUM系统可以创建的任务数
//|-------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|-------------------------------------------------------------------------------------------------
//| 函数设计 | cfh 2019.5.31
//==================================================================================================
INT8U GetFreethreadID(void)
{
    INT8U i;

    for(i=0;i<THREAD_MAX_SOURCE;i++)
    {

        if(stThread[i].uch_Used ==0)
        {

            stThread[i].uch_Used = 1;
            stThread[i].uch_ID = i;

            return i;

        }

    }

    if(i== THREAD_MAX_SOURCE)
    {

        return 0xff;
    }




}






