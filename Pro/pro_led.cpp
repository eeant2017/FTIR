//==================================================================================================
//| 文件名称 | Pro_led.cpp
//|--------- |--------------------------------------------------------------------------------------
//| 文件描述 | FPGA接口模块
//|--------- |--------------------------------------------------------------------------------------
//| 版权声明 | Copyright2011, 聚光科技(FPI)
//|----------|--------------------------------------------------------------------------------------
//|  版本    |  时间       |  作者     | 描述
//|--------- |-------------|-----------|------------------------------------------------------------
//|  V1.1    | 2016.8.5 |lz      | 规范化
//==================================================================================================
#include "Bsp/Bsp_Gpioctl.h"
#include "Pro/pro_led.h"


//==================================================================================================
//| 函数名称 | Err_LEDON
//|------------------------------------------------------------------------------------------------
//| 函数功能 |
//|------------------------------------------------------------------------------------------------
//| 输入参数 |
//|------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.19
//==================================================================================================
void Err_LEDON(void)
{
     gpio_ctl(GPIO_ERROR,1,0);
}

//==================================================================================================
//| 函数名称 | Err_LEDOFF
//|------------------------------------------------------------------------------------------------
//| 函数功能 |
//|------------------------------------------------------------------------------------------------
//| 输入参数 |
//|------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.19
//==================================================================================================
void Err_LEDOFF(void)
{
    gpio_ctl(GPIO_ERROR,1,1);
}

//==================================================================================================
//| 函数名称 | RUN_LEDON
//|------------------------------------------------------------------------------------------------
//| 函数功能 |
//|------------------------------------------------------------------------------------------------
//| 输入参数 |
//|------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.19
//==================================================================================================
void RUN_LEDON(void)
{
    gpio_ctl(GPIO_RUN,1,0);
}

//==================================================================================================
//| 函数名称 | RUN_LEDOFF
//|------------------------------------------------------------------------------------------------
//| 函数功能 |
//|------------------------------------------------------------------------------------------------
//| 输入参数 |
//|------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.19
//==================================================================================================
void RUN_LEDOFF(void)
{
    gpio_ctl(GPIO_RUN,1,1);
}

//==================================================================================================
//| 函数名称 | ALARM_LEDON
//|------------------------------------------------------------------------------------------------
//| 函数功能 |
//|------------------------------------------------------------------------------------------------
//| 输入参数 |
//|------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.19
//==================================================================================================
void ALARM_LEDON(void)
{
    gpio_ctl(GPIO_ALARM,1,0);
}

//==================================================================================================
//| 函数名称 | ALARM_LEDOFF
//|------------------------------------------------------------------------------------------------
//| 函数功能 |
//|------------------------------------------------------------------------------------------------
//| 输入参数 |
//|------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.19
//==================================================================================================
void ALARM_LEDOFF(void)
{
    gpio_ctl(GPIO_ALARM,1,1);
}



//==================================================================================================
//| 函数名称 | LedQuickSpark()
//|------------------------------------------------------------------------------------------------
//| 函数功能 | LED ctrl
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 无
//|------------------------------------------------------------------------------------------------
//| 函数设计 | zbb 2018.7.30
//==================================================================================================
void  LedQuickSpark(void)
{
    INT32U i = 0;

    for (i = 0; i < 5; i++)
    {
        ALARM_LEDOFF();
        Err_LEDOFF();
        RUN_LEDOFF();
        usleep(100000);
        ALARM_LEDON();
        Err_LEDON();
        RUN_LEDON();
        usleep(100000);
        //fanzhuan
    }
    ALARM_LEDOFF();
    Err_LEDOFF();
    RUN_LEDON();
}

//==================================================================================================
//| 函数名称 | RUN_LedSpark()
//|------------------------------------------------------------------------------------------------
//| 函数功能 | LED ctrl
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 无
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.30
//==================================================================================================
void RUN_LedToggle(void)
{
    static INT8U uch_runset = 0;

    if (uch_runset == 1)
        uch_runset = 0;
    else
        uch_runset = 1;

    gpio_ctl(GPIO_RUN,1,uch_runset);
}

//==================================================================================================
//| 函数名称 | ERR_LedSpark()
//|------------------------------------------------------------------------------------------------
//| 函数功能 | LED ctrl
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 无
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.30
//==================================================================================================
void ERR_LedToggle(void)
{
    static INT8U uch_errset = 0;

    if (uch_errset == 1)
        uch_errset = 0;
    else
        uch_errset = 1;

    gpio_ctl(GPIO_ERROR,1,uch_errset);
}


//==================================================================================================
//| 函数名称 | ALARM_LedToggle()
//|------------------------------------------------------------------------------------------------
//| 函数功能 | LED ctrl
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 无
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.30
//==================================================================================================
void ALARM_LedToggle(void)
{
    static INT8U uch_alarmset = 0;

    if (uch_alarmset == 1)
        uch_alarmset = 0;
    else
        uch_alarmset = 1;

    gpio_ctl(GPIO_ERROR,1,uch_alarmset);
}


//==================================================================================================
//| 函数名称 | CORELED_LedToggle()
//|------------------------------------------------------------------------------------------------
//| 函数功能 | LED ctrl
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 无
//|------------------------------------------------------------------------------------------------
//| 函数设计 | Chensq 2020.08.30
//==================================================================================================
void CORELED_LedToggle(void)
{
    static INT8U uch_ledset = 0;

    if (uch_ledset == 1)
        uch_ledset = 0;
    else
        uch_ledset = 1;

    gpio_ctl(GPIO_LED,1,uch_ledset);
}


//======================== End of File =============================================================
