//==================================================================================================
//| 文件名称 | Bsp_FPGA.cpp
//|-----------------------------------------------------------------------------------------------
//| 文件描述 | 初始化模块
//|-----------------------------------------------------------------------------------------------
//| 运行环境 | 所有C/C++语言编译环境，包括单片机编译器
//|-----------------------------------------------------------------------------------------------
//| 版权声明 | Copyright2017, 聚光科技(FPI)
//|------------------------------------------------------------------------------------------------
//|  版本   |  时间       |  作者     | 描述
//|--------- ------------------------------------------------------------------------------------
//|  V1.0   | 2018.08.16  |  hb     | 初版
//==================================================================================================

#include "Bsp_Fpga.h"

#include <QMutex>
QMutex mutex_MemRead;

CBspFpga cl_bspFpga;
//==================================================================================================
//| 函数名称 | CBspFpga:
//|------------------------------------------------------------------------------------------------
//| 函数功能 | CBspFpga构造函数
//|------------------------------------------------------------------------------------------------
//| 输入参数 | void
//|------------------------------------------------------------------------------------------------
//| 返回参数 | void
//|------------------------------------------------------------------------------------------------
//| 函数设计 | hb,2018.08.16
//==================================================================================================
CBspFpga::CBspFpga(void)
{

}
//==================================================================================================
//| 函数名称 | ~CBspFpga
//|------------------------------------------------------------------------------------------------
//| 函数功能 | ~CBspFpga析构函数
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 无
//|------------------------------------------------------------------------------------------------
//| 函数设计 | hb,2018.08.16
//==================================================================================================
CBspFpga::~CBspFpga(void)
{
    ////qDebug()<<"QT Demo:~CAppComFpi:";
    //在此销毁类成员(变量)
}

//==================================================================================================
//| 函数名称 |InsmodFPGA()
//|------------------------------------------------------------------------------------------------
//| 函数功能 | 加载FPGA模块
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 1 成功 0 失败
//|------------------------------------------------------------------------------------------------
//| 函数设计 | hb,2018.08.17
//==================================================================================================
BOOL CBspFpga::InsmodFPGA(void)
{
    char cmd[64];
    sprintf(cmd,"insmod /home/fpi/dram_fpga.ko");
    system(cmd);

    sprintf(cmd,"mknod /dev/dram_fpga c 281 0");
    system(cmd);
    //sprintf(cmd,"ifconfig can%d up",port);
   // system(cmd);

    return 1;
}
//==================================================================================================
//| 函数名称 |Init()
//|------------------------------------------------------------------------------------------------
//| 函数功能 | 初始化
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 1 成功 0 失败
//|------------------------------------------------------------------------------------------------
//| 函数设计 | hb,2018.08.17
//==================================================================================================
BOOL CBspFpga::FPGAInit(void)
{
    ul_fd = open("/dev/dram_fpga",O_RDWR);
    if (ul_fd < 0)
    {
        printf ("Open /dev/dram_fpga file error\n");
        return 0;
    }
    else
    {
        printf ("Open /dev/dram_fpga file ok\n");
    }
    return 1;
}
//==================================================================================================
//| 函数名称 | ReadFromFPGA
//|------------------------------------------------------------------------------------------------
//| 函数功能 | 从FPGA读取数据
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 无
//|------------------------------------------------------------------------------------------------
//| 函数设计 | hb,2018.08.17
//==================================================================================================
INT16U CBspFpga::ReadFromFPGA(INT32U ul_Addr,INT16U *ui_Buf,INT32U ul_Len)
{

    mutex_MemRead.lock();                   //--加锁读取 防止线程干扰
    INT32U ul_ret,i;
    // ul_Addr = 0xbff;

    ioctl(ul_fd,ul_Addr);
    ul_ret = read(ul_fd, ui_Buf, ul_Len*2);

    //for(i=0;i<(ul_Len);i++)
    //    qDebug(" Num = %d",ui_Buf[i]);
    mutex_MemRead.unlock();

    return ui_Buf[0];
}
//==================================================================================================
//| 函数名称 | WriteToFPGA
//|------------------------------------------------------------------------------------------------
//| 函数功能 | 向FPGA写书据
//|------------------------------------------------------------------------------------------------
//| 输入参数 | 无
//|------------------------------------------------------------------------------------------------
//| 返回参数 | 无
//|------------------------------------------------------------------------------------------------
//| 函数设计 | hb,2018.08.17
//==================================================================================================
INT32U CBspFpga::WriteToFPGA(INT32U ul_Addr,const INT16U *ui_Buf,INT32U ul_Len)
{
    mutex_MemRead.lock();                   //--加锁读取 防止线程干扰
    INT32U ul_ret,i;
    ioctl(ul_fd,ul_Addr);
    ul_ret = write(ul_fd, ui_Buf, ul_Len);
   // for(i=0;i<(100);i++)
       ////qDebug(" Num = %d",ui_Buf[i]);

     mutex_MemRead.unlock();

    return ul_ret;
}
