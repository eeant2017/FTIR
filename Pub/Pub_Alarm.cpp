//==================================================================================================
//| 文件名称 | Pub_Alarm.cpp
//|--------- |--------------------------------------------------------------------------------------
//| 文件描述 | 
//|--------- |--------------------------------------------------------------------------------------
//| 运行环境 | 所有C/C++语言编译环境，包括单片机编译器
//|--------- |--------------------------------------------------------------------------------------
//| 版权声明 | Copyright2009, 聚光科技(FPI)
//|----------|--------------------------------------------------------------------------------------
//|  版本    |  时间       |  作者     | 描述
//|--------- |-------------|-----------|------------------------------------------------------------
//|  V1.0    | 2011.02.24  |  yfei      | 初版
//==================================================================================================

#include "Pub_Alarm.h"

INT8U  auch_AlarmCode[TOTAL_ALARM_NUM] = {0x00};
INT8U  auch_AlarmCodePCGet[TOTAL_ALARM_NUM] = {0x00};
//==================================================================================================
//| 函数名称 | PushAlarmcode
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 压入报警码模块
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 压入报警码
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | yfei,2010.10.27
//==================================================================================================
void PushAlarmCode(INT8U uch_alarmcode)
{
   INT8U i;

   //判断是否已有报警码
   for(i=0; i<TOTAL_ALARM_NUM; i++)
   {
       if(auch_AlarmCode[i] == uch_alarmcode)
           {
               return ;
           }

   }
   //如果没有加入报警码
   for(i=0; i<TOTAL_ALARM_NUM; i++)
   {
          if(auch_AlarmCode[i] == 0x00)
          {
              auch_AlarmCode[i] = uch_alarmcode;
              return ;
          }
   }
}

//==================================================================================================
//| 函数名称 | DelAlarmCode
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 删除报警码模块
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 需删除的报警码
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | yfei,2010.10.27
//==================================================================================================
void DelAlarmCode(INT8U uch_alarmcode)
{
   INT8U i;

   //判断是否已有报警码
   for(i=0; i<TOTAL_ALARM_NUM; i++)
   {
           if(auch_AlarmCode[i] == uch_alarmcode && auch_AlarmCodePCGet[i]>2)
       {
                   auch_AlarmCode[i] = 0x00;
           }
   }

   return ;

}


//==================================================================================================
//| 函数名称 | AlarmCodePCGetCnt
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 计算PC得到了几次相应的报警码
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 |
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | lyb,2019.07.23
//==================================================================================================
void AlarmCodePCGetCnt()
{
    INT8U i;

    //判断是否已有报警码
    for(i=0; i<TOTAL_ALARM_NUM; i++)
    {
        if(auch_AlarmCode[i] != 0)
        {
            auch_AlarmCodePCGet[i]++;
            if(auch_AlarmCodePCGet[i]>10)
            {
                    auch_AlarmCodePCGet[i] = 0;
            }
        }
        else
        {
                auch_AlarmCodePCGet[i] = 0;
        }
    }

}




//==================================================================================================
//| 函数名称 | ClearPopAlarm
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 消除弹窗报警码
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 |
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | lyb,2019.07.23
//==================================================================================================
void ClearPopAlarm()
{
        INT8U i;

        //判断是否是弹窗的报警码
        for(i=0; i<TOTAL_ALARM_NUM; i++)
        {
                if(auch_AlarmCode[i] == 0x20
                        || auch_AlarmCode[i] == 0x21
                        || auch_AlarmCode[i] == 0x22
                        || auch_AlarmCode[i] == 0x23
                        )
                {
                        auch_AlarmCode[i] = 0x00;
                }
        }

}



//no more

