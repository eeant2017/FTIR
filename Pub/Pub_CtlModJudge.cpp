//==================================================================================================
//| 文件名称 | Pub_TempJudge.cpp
//|--------- |--------------------------------------------------------------------------------------
//| 文件描述 | 环形队列处理
//|--------- |--------------------------------------------------------------------------------------
//| 运行环境 | 所有C/++语言编译器，包括单片机编译器
//|--------- |--------------------------------------------------------------------------------------
//| 版权声明 | Copyright 2011
//|----------|--------------------------------------------------------------------------------------
//|  版本    |  时间       |  作者     | 描述
//|----------|-------------|-----------|------------------------------------------------------------
//|  V1.0    | 2011.06.15  | zhangdan  |
//==================================================================================================
#include "Pub_CtlModJudge.h"
#include <math.h>

//==================================================================================================
//| 函数名称 | RangeJudge
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 温度超出范围
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | f_Pv：当前值
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | FALSE:超出温度范围，TRUE：正常
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | swx,2011.12.12
//==================================================================================================
INT8U CCtlModJudge::RangeJudge(FP32 f_Pv)
{
        if((f_Pv > f_ValMax)||(f_Pv < f_ValMin))
        {
            uch_RangeOkCnt = 0;
                uch_RangeErrCnt++;
                if(uch_RangeErrCnt >= 3)//连续三次超出最大值
        {
                uch_RangeErrCnt = 0;
                return JUDGE_RESULT_FALSE;
        }
        }
        else
        {
            uch_RangeErrCnt = 0;
                uch_RangeOkCnt++;
                if(uch_RangeOkCnt >= 3)
        {
                uch_RangeOkCnt = 0;
                return JUDGE_RESULT_OK;
        }
        }

        return JUDGE_RESULT_ING;
}

//==================================================================================================
//| 函数名称 | CtlJudge
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 温度超出范围
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | f_Pv：当前值
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | FALSE:超出温度范围，TRUE：正常
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | swx,2011.12.12
//==================================================================================================
INT8U CCtlModJudge::CtlJudge(FP32 f_Pv, FP32 f_Target)
{
        if(fabsf(f_Pv - f_Target) > f_CtlJudgeErr)
        {
                uin_CtlErrCnt++;
                if(uin_CtlErrCnt >= 233)//连续70S超出最大值
                //if(uin_CtlErrCnt >= 1998)//连续180S超出最大值(因柱前压升压较慢，故放宽报警判断标准)
        {
                uin_CtlErrCnt = 0;
                return JUDGE_RESULT_FALSE;
        }
        else
        {
            return JUDGE_RESULT_ING;
        }
        }
        else
        {
            uin_CtlErrCnt = 0;
            return JUDGE_RESULT_OK;
        }
}

//==================================================================================================
//| 函数名称 | Kill.
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 温度紧急处理消警
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | void
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | void
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | ygm,2010.01.01
//==================================================================================================
void CCtlModJudge::Kill(void)
{
    uin_CtlErrCnt = 0;
}
