// ==================================================================================================
//| 文件名称 | Mod_Com.cpp
//|--------- |--------------------------------------------------------------------------------------
//| 文件描述 | Mod_Com.cpp源文件
//|--------- |--------------------------------------------------------------------------------------
//| 版权声明 | Copyright2009, 聚光科技(FPI)
//|----------|--------------------------------------------------------------------------------------
//|  版本    |  时间       |  作者     | 描述
//|--------- |-------------|-----------|------------------------------------------------------------
//|  V1.1    | 2009.04.24  | Gang  | 规范化
//==================================================================================================

#include "Pub_Tmr.h"

volatile INT32U gul_softTmr = 0;

//==================================================================================================
//| 函数名称 | TmrOut
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 定时溢出检测
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 1 -- 溢出， 0 -- 没有溢出
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//|          | gan,2012.09.25 加入环绕判断
//==================================================================================================
INT8S CTmr::TmrOut()
{
    if(uch_stop == 1 )
    {
        return 0;
    }

    if (gul_softTmr >= ul_tmr)
    {
        if(gul_softTmr - ul_tmr >= ul_interval)
        {
            ul_tmr = gul_softTmr;

            return 1;
        }
    }
    else if (gul_softTmr < ul_tmr)
    {
        if ((0xFFFFFFFF-ul_tmr+gul_softTmr) >= ul_interval)
        {
            ul_tmr = gul_softTmr;

            return 1;
        }
    }

    return 0;
}
 //==================================================================================================
//| 函数名称 | TmrOut1
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 定时溢出检测
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 1 -- 溢出， 0 -- 没有溢出
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//|          | gan,2012.09.25 加入环绕判断
//==================================================================================================
INT8S CTmr::TmrOut1()
{
    if(uch_stop1 == 1 )
    {
        return 0;
    }

    if (gul_softTmr >= ul_tmr1)
    {
        if((gul_softTmr - ul_tmr1) >= ul_interval1)
        {
            ul_tmr1 = gul_softTmr;

            return 1;
        }
    }
    else if (gul_softTmr < ul_tmr1)
    {
        if ((0xFFFFFFFF-ul_tmr1+gul_softTmr) >= ul_interval1)
        {
            ul_tmr1 = gul_softTmr;

            return 1;
        }
    }

    return 0;
}
//==================================================================================================
//| 函数名称 | TmrOut2
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 定时溢出检测
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 1 -- 溢出， 0 -- 没有溢出
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//|          | gan,2012.09.25 加入环绕判断
//==================================================================================================
INT8S CTmr::TmrOut2()
{
    if(uch_stop2 == 1 )
    {
        return 0;
    }

    if (gul_softTmr >= ul_tmr2)
    {
        if((gul_softTmr - ul_tmr2) >= ul_interval2)
        {
            ul_tmr2 = gul_softTmr;

            return 1;
        }
    }
    else if (gul_softTmr < ul_tmr2)
    {
        if ((0xFFFFFFFF-ul_tmr2+gul_softTmr) >= ul_interval2)
        {
            ul_tmr2 = gul_softTmr;

            return 1;
        }
    }

    return 0;
}
//==================================================================================================
//| 函数名称 | TmrOut3
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 定时溢出检测
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 1 -- 溢出， 0 -- 没有溢出
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//|          | gan,2012.09.25 加入环绕判断
//==================================================================================================
INT8S CTmr::TmrOut3()
{
    if(uch_stop3 == 1 )
    {
        return 0;
    }

    if (gul_softTmr>= ul_tmr3)
    {
        if((gul_softTmr - ul_tmr3) >= ul_interval3)
        {
            ul_tmr3 = gul_softTmr;

            return 1;
        }
    }
    else if (gul_softTmr < ul_tmr3)
    {
        if ((0xFFFFFFFF-ul_tmr3+gul_softTmr) >= ul_interval3)
        {
            ul_tmr3 = gul_softTmr;

            return 1;
        }
    }

    return 0;
}
//==================================================================================================
//| 函数名称 | TmrOut4
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 定时溢出检测
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | 1 -- 溢出， 0 -- 没有溢出
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//|          | gan,2012.09.25 加入环绕判断
//==================================================================================================
INT8S CTmr::TmrOut4()
{
    if(uch_stop4 == 1 )
    {
        return 0;
    }

    if (gul_softTmr>= ul_tmr4)
    {
        if((gul_softTmr - ul_tmr4) >= ul_interval4)
        {
            ul_tmr4 = gul_softTmr;

            return 1;
        }
    }
    else if (gul_softTmr < ul_tmr4)
    {
        if ((0xFFFFFFFF-ul_tmr4+gul_softTmr) >= ul_interval4)
        {
            ul_tmr4 = gul_softTmr;

            return 1;
        }
    }

    return 0;
}

//==================================================================================================
//| 函数名称 | Start
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 启动定时器  具有sl_init时间的偏移量
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | INT32U ul_init
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | void
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//==================================================================================================
void CTmr::Start(INT32S sl_init)
{
    ul_tmr = gul_softTmr + sl_init;
    uch_stop = 0;

    return;
}

//==================================================================================================
//| 函数名称 | Start
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 启动定时器
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | void
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//==================================================================================================
void CTmr::Start(void)
{
    ul_tmr = gul_softTmr;
    uch_stop = 0;

    return;
}
 //==================================================================================================
//| 函数名称 | Start1
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 启动定时器
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | void
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//==================================================================================================
void CTmr::Start1(void)
{
    //ul_tmr = gul_softTmrS + ul_interval;
    ul_tmr1 = gul_softTmr;
    uch_stop1 = 0;

    return;
}
//==================================================================================================
//| 函数名称 | Start2
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 启动定时器
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | void
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//==================================================================================================
void CTmr::Start2(void)
{
    //ul_tmr = gul_softTmrS + ul_interval;
    ul_tmr2 = gul_softTmr;
    uch_stop2 = 0;

    return;
}
//==================================================================================================
//| 函数名称 | Start3
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 启动定时器
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | void
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//==================================================================================================
void CTmr::Start3(void)
{
    //ul_tmr = gul_softTmrS + ul_interval;
    ul_tmr3 = gul_softTmr;
    uch_stop3 = 0;

    return;
}
//==================================================================================================
//| 函数名称 | Start4
//|----------|--------------------------------------------------------------------------------------
//| 函数功能 | 启动定时器
//|----------|--------------------------------------------------------------------------------------
//| 输入参数 | 无
//|----------|--------------------------------------------------------------------------------------
//| 返回参数 | void
//|----------|--------------------------------------------------------------------------------------
//| 函数设计 | Gang,2009.04.22
//==================================================================================================
void CTmr::Start4(void)
{
    //ul_tmr = gul_softTmrS + ul_interval;
    ul_tmr4 = gul_softTmr;
    uch_stop4 = 0;

    return;
}
//no more
